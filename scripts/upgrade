#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..." --weight=2

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
admin=$(ynh_app_setting_get --app=$app --key=admin)
is_public=$(ynh_app_setting_get --app=$app --key=is_public)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
language=$(ynh_app_setting_get --app=$app --key=language)
db_name=$(ynh_app_setting_get --app=$app --key=db_name)
phpversion=$(ynh_app_setting_get --app="$app" --key=phpversion)

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

if [ -z "$is_public" ]
then
	is_public=$(ynh_app_setting_get --app=$app --key=public_site)
	ynh_app_setting_set --app=$app --key=is_public --value=$is_public
	ynh_app_setting_delete --app=$app --key=public_site
fi

# Fix is_public as a boolean value
if [ "$is_public" = "Yes" ]; then
	ynh_app_setting_set --app=$app --key=is_public --value=1
	is_public=1
elif [ "$is_public" = "No" ]; then
	ynh_app_setting_set --app=$app --key=is_public --value=0
	is_public=0
fi

# If db_name doesn't exist, create it
if [ -z "$db_name" ]; then
	db_name=$(ynh_sanitize_dbid --db_name=$app)
	ynh_app_setting_set --app=$app --key=db_name --value=$db_name
fi

# If final_path doesn't exist, create it
if [ -z "$final_path" ]; then
	final_path=/var/www/$app
	ynh_app_setting_set --app=$app --key=final_path --value=$final_path
fi

# Make sure default language is set
if [ -z "$language" ]
then
    language=$(grep LANGUE "/var/www/$app/variables.php" | grep -Po "'.*?'" | cut -d"'" -f2)
fi

# Use path instead of path_url in settings.yml...
if [ -z "$path_url" ]
then
	path_url=$(ynh_app_setting_get --app=$app --key=path_url)
	ynh_app_setting_set --app=$app --key=path --value=$path_url
	ynh_app_setting_delete --app=$app --key=path_url
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=3

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CHECK THE PATH
#=================================================

# Normalize the URL path syntax
path_url=$(ynh_normalize_url_path --path_url=$path_url)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=2

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$final_path"
fi

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=2

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..." --weight=7

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Making sure dedicated system user exists..."

# Create a dedicated user (if not existing)
ynh_system_user_create --username=$app

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading PHP-FPM configuration..." --weight=3

# Create a dedicated PHP-FPM config
ynh_add_fpm_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPGRADE CONFIG.PHP
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
    ynh_script_progression --message="Reconfiguring $app..." --weight=2

    config="$final_path/app/inc/config.php"

    # Verify the checksum and backup the file if it's different
    ynh_backup_if_checksum_is_different --file="$config"

    admin_mail=$(ynh_user_get_info --username=$admin --key=mail)

    cp ../conf/config.php "$config"

    # Change variables in configuration
    ynh_replace_string --match_string="__DBUSER__"    --replace_string=$db_name    --target_file="$config"
    db_pwd=$(ynh_app_setting_get --app=$app --key=mysqlpwd)
    ynh_replace_string --match_string="__DBPWD__"     --replace_string="$db_pwd"   --target_file="$config"
    ynh_replace_string --match_string="__DBNAME__"    --replace_string=$db_name    --target_file="$config"
    ynh_replace_string --match_string="__ADMINMAIL__" --replace_string=$admin_mail --target_file="$config"
    ynh_replace_string --match_string="__LANGUAGE__"  --replace_string=$language   --target_file="$config"
    ynh_replace_string --match_string="__DOMAIN__"    --replace_string=$domain     --target_file="$config"
    ynh_replace_string --match_string="__PATH__"      --replace_string=$path_url   --target_file="$config"

    # Calculate and store the config file checksum into the app settings
    ynh_store_file_checksum --file="$config"
fi

#=================================================
# REPLACE LOGO IMAGE (DEFAULT IS FRAMADATE)
#=================================================

cp ../img/logo.png "$final_path/images"

#=================================================
# CREATE LOG FILE
#=================================================

touch "$final_path/admin/stdout.log"

#=================================================
# RUN DATABASE UPGRADE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
    ynh_script_progression --message="Upgrading database..." --weight=2

    # Install composer
    ynh_install_composer

    ynh_exec_warn_less php "$final_path/admin/migration.php"
fi

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

chown -R root: "$final_path"
chown -R $app: "$final_path/"{tpl_c,admin/stdout.log}

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Upgrading SSOwat configuration..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	ynh_app_setting_set --app=$app --key=skipped_uris --value="/"

	# Keep /admin private
	if [ "$path_url" == "/" ]; then
	    # If the path is /, clear it to prevent any error with the regex.
	    path_url=""
	fi
	# Modify the domain to be used in a regex
	domain_regex=$(echo "$domain" | sed 's@-@.@g')
	ynh_app_setting_set --app=$app --key=protected_regex --value="$domain_regex$path_url/admin/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
